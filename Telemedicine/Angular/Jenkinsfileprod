#!/usr/bin/env groovy

node {
   stage('checkout') {
       checkout scm
   }
   
   stage('Installing Packages') {
      sh "npm install"
   }

   stage('packaging') {
       sh "ng build --prod --aot false --build-optimizer false --base-href=/clinic/ --output-hashing=all"
   }
 
   def uiVersion
   stage ('create Image Version'){
   uiVersion = sh (
   script: "date +'%Y-%m-%d-%H.%M'",
   returnStdout: true,
      )
   }

   def dockerImage
   stage('build docker') {
       sh "cp -R clinic docker/"
       sh "cp -R docker target/"
       dockerImage = docker.build('teleprod/uiservice', 'target/docker')
   }

   stage('publish docker') {
       docker.withRegistry('http://172.16.11.166:37719', 'teleprod') {
           dockerImage.push "${uiVersion}"
         }
      }
      
   stage('delete docker Image') {
       sh "docker rmi teleprod/uiservice"
       sh "docker rmi 172.16.11.166:37719/teleprod/uiservice:${uiVersion}"
       }
 
  stage('Set Terraform path') {
 script {
 def tfHome = tool name: "Terraform"
 env.PATH = "${tfHome}:${env.PATH}"
 }
 sh "terraform -version"
 
 }
  


   stage('Deploy on UAT Server')  {
       sh "cd target/ && terraform init"
       sh "cd target/ && terraform apply -auto-approve -var IMAGEVERSION=${uiVersion}"
       sh "cd target/ && svn commit -m 'store terraform state file'"
       }    

   }