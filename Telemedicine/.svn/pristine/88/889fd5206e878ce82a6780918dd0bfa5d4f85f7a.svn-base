<div>
  <ngx-spinner>
    <p class="loading">Loading...</p>
  </ngx-spinner>
  <app-tm-breadcrumb></app-tm-breadcrumb>
  <div class="main-container conatiner-fluid">
    <div class="right-area">
      <div class="app-top-area left">
        <div class="breadcrumb-area">
          <a routerlink="/appointments" href="#/appointments">Home</a>
        </div>
        <div class="page-title">Change Password</div>
      </div>
      <div class="login-form forgot-form">
        <form [formGroup]="form">
          <div class="input-group pass2">
            <label>Old Password<sup>*</sup>
              <i role="button" matSuffix (click)="hideOldPassword = !hideOldPassword"
                [ngClass]="hideOldPassword ? 'fa fa-eye-slash' : 'fa fa-eye'" class="float-right"></i>
            </label>
            <input [type]="hideOldPassword? 'password' : 'text'" formControlName="oldPassword" class="pass"
              autocomplete="new-password">
            <mat-error class="mt-1 ml-1"
              *ngIf="form.get('oldPassword').errors && (form.get('oldPassword').touched || form.get('oldPassword').dirty)">
              <span *ngIf="form.get('oldPassword').errors.required">{{'errPasswordRequired' | l10n}}</span>
            </mat-error>
          </div>
          <div class="input-group pass2">
            <label>New Password<sup>*</sup>
              <i role="button" matSuffix (click)="hidePassword = !hidePassword"
                [ngClass]="hidePassword ? 'fa fa-eye-slash' : 'fa fa-eye'" class="float-right"></i>
            </label>
            <input [type]="hidePassword? 'password' : 'text'" formControlName="newPassword" class="pass">
            <mat-error class="mt-1 ml-1"
              *ngIf="form.get('newPassword').errors && (form.get('newPassword').touched || form.get('newPassword').dirty)">
              <span *ngIf="form.get('newPassword').errors.required">{{'errPasswordRequired' |l10n}}</span>
              <span *ngIf="form.get('newPassword').errors.maxlength">{{'errPasswordMaxLength' | l10n}}</span>
              <span
                *ngIf="!form.get('newPassword').errors.strong && form.get('newPassword').errors.minlength">{{'errPasswordMinLength'
                | l10n}}</span>
              <span
                *ngIf="(!form.get('newPassword').errors.required && !form.get('newPassword').errors.maxlength) && form.get('newPassword').errors.strong">{{'errPasswordPattern'
                | l10n}}</span>
            </mat-error>
          </div>
          <div class="input-group pass2">
            <label>Confirm New Password<sup>*</sup>
              <i role="button" matSuffix (click)="hideReEnterPassword = !hideReEnterPassword"
                [ngClass]="hideReEnterPassword ? 'fa fa-eye-slash' : 'fa fa-eye'" class="float-right"></i>
            </label>
            <input [type]="hideReEnterPassword? 'password' : 'text'" formControlName="confirmPassword" class="pass">
            <mat-error class="mt-1 ml-1"
              *ngIf="form.get('confirmPassword').errors && (form.get('confirmPassword').touched || form.get('confirmPassword').dirty)">
              <span *ngIf="form.get('confirmPassword').errors.required">{{'errPasswordRequired' | l10n}}</span>
              <span *ngIf="form.get('confirmPassword').errors.passwordMismatch">{{'lblEnterCorrectPass' | l10n}}</span>
            </mat-error>
          </div>
          <div class="input-group btn-area">
            <button type="button" class="btn btn-primary mr-2" [disabled]="this.form.invalid"
              (click)="updatePassword()">Submit</button>
            <button type="button" class="btn btn-primary" (click)="reset()">Clear</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<app-footer></app-footer>

<ng-template #changePasswordRef let-data>
  <mat-dialog-content>{{data}}</mat-dialog-content>
  <mat-dialog-actions class="justify-content-center">
    <button mat-flat-button mat-dialog-close>Ok</button>
  </mat-dialog-actions>
</ng-template>