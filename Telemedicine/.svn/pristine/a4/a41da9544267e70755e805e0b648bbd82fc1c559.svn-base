package com.nsdl.ndhm.service.impl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.nsdl.ndhm.dto.AddContextResponseDTO;
import com.nsdl.ndhm.entity.AddContextEntity;
import com.nsdl.ndhm.logger.LoggingClientInfo;
import com.nsdl.ndhm.repository.AddContextRepository;
import com.nsdl.ndhm.service.LinkCallbackService;

@Service
@LoggingClientInfo
public class LinkCallbackServiceImpl implements LinkCallbackService {
	private static final Logger logger = LoggerFactory.getLogger(LinkCallbackServiceImpl.class);

	@Autowired
	AddContextRepository addContextRepository;

	@Override
	public void updateOnAddContext(AddContextResponseDTO addContextResponseDTO) {
		logger.info("Update add context In Service Starts");
		ObjectMapper mapper = new ObjectMapper();

		String json = "";
		try {
			json = mapper.writeValueAsString(addContextResponseDTO);
		} catch (JsonProcessingException e) {
			logger.error("Error in updateInit " + e.getMessage());
		}
		AddContextEntity authInitEntity = AddContextEntity.builder()
				.requestId(addContextResponseDTO.getResp().getRequestId())
				.timestamp(addContextResponseDTO.getTimestamp()).status(true).response(json).build();
		try {
			authInitEntity = addContextRepository.save(authInitEntity);
		} catch (Exception e) {
			logger.error("Error in Update add context " + e.getMessage());
			authInitEntity = null;
		}
		logger.info("Update add context In Service ends");

	}

}
