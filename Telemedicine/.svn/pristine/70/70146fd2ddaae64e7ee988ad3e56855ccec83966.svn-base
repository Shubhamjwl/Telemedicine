import { HttpClient, HttpResponse } from '@angular/common/http';
import { Component, OnInit } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { ActivatedRoute, Router } from '@angular/router';
import { Observable } from 'rxjs';
import { CheckerService } from 'src/app/shared/commonBuildBlocks/services/checkerServices/checker.service';
import { DocumentService } from 'src/app/shared/commonBuildBlocks/services/documentServices/document.service';
import { HomePageService } from 'src/app/shared/commonBuildBlocks/services/homepageServices/home-page.service';
import { ToastMessageService } from 'src/app/shared/commonBuildBlocks/toaster/toast-message.service';
import { environment } from 'src/environments/environment';

@Component({
  selector: 'app-tm-sign-in',
  templateUrl: './tm-sign-in.component.html',
  styleUrls: ['./tm-sign-in.component.scss']
})
export class TmSignInComponent implements OnInit {
  bgImg = 'assets/images/624124.jpg'
  consulationsCount: any = 0;
  doctorsCount: any = 0;
  specialistCount: any = 0;
  fileUrl
    constructor( private router: Router,
      private routes: ActivatedRoute,
      private homeServiceInstance: HomePageService,
      private toastMessage: ToastMessageService,     
      private sanitizer: DomSanitizer,
      private documentService: DocumentService  ,
      public checkerService: CheckerService,
      private http: HttpClient
    ) {}

  /**
   * Used for tabs of signin / register
   * selectedTab = 1; is Sign In tab
   * selectedTab = 2; is Register tab
   */
  selectedTab: any = 1;
  /**
   * Used for Regitstration Login options
   * isLoginOptionSelected = 1; is Doctor
   * isLoginOptionSelected = 2; is Patient
   */
  isLoginOptionSelected: any = 0;

  ngOnInit() {
  this.getNumberOfdoctors();
  this.getNumberOfConsultations();
  this.getNumberOfSpecialist();
  }

  activatedTab(value) {
      this.selectedTab = value;
      if(this.selectedTab === 2) {
        this.isLoginOptionSelected = 1
        this.confirmRegisterOption();
      }
  }

  registerLoginOption(value) {
      this.isLoginOptionSelected = value;
  }

  confirmRegisterOption() {      
      if (this.isLoginOptionSelected == 1) {
          this.router.navigate(['register-doctor']);

      } else if (this.isLoginOptionSelected == 2) {
          this.router.navigate(['../patient'], { relativeTo: this.routes });
      }
      else {
          this.toastMessage.showInfoMsg('Please select Doctor option or Patient option', 'Information!');
      }
  }

     
/**
 * Used to show Contact Us option details
 */
onClickContactUs() {
  this.router.navigate(['../contact-us'], { relativeTo: this.routes });
}

navigateToPage(value) {
  if (value === 'home') {
    this.router.navigate(['../'], { relativeTo: this.routes });
  } else if (value === 'aboutUs') {
    window.location.href = 'https://nsdl.co.in/about/index.php';
    // this.router.navigate(['../aboutUs'], { relativeTo: this.routes }); //'../aboutUs'
  } else if (value === 'contactUs') {
    window.location.href = 'https://nsdl.co.in/contactus.php';
    // this.router.navigate(['../programs'], { relativeTo: this.routes });
  }
}
getNumberOfdoctors() {
  let request = {
    "api":"get doctors count",
    "id":"doctor count",
    "version":"v1",
    "requesttime":"2021-01-11T05:48:03.125Z",
    "request": null,
    "mimeType":"application/json"
  }
  this.homeServiceInstance.getDoctorsCount(request).subscribe(data => {    
    if (data) {
      this.doctorsCount = data.response;
    }
  }, error => {

  });
}

getNumberOfConsultations() {
  let request = {
    "api":"get consultation count",
    "id":"consultation count",
    "version":"v1",
    "requesttime":"2020-11-29T05:48:03.125Z",
    "request": null,
    "mimeType":"application/json"
  }
  this.homeServiceInstance.getConsultationCount(request).subscribe(data => {
    if (data) {
      this.consulationsCount = data.response;
    }
  }, error => {
    
  });
}

getNumberOfSpecialist() {
  let request = {
    "api":"get speciality count",
    "id":"doctor speciality count",
    "version":"v1",
    "requesttime":"2020-11-29T05:48:03.125Z",
    "request": null,
    "mimeType":"application/json"
  }
  this.homeServiceInstance.getSpecialistsCount(request).subscribe(data => {
    if (data) {
      this.specialistCount = data.response;
    }
  }, error => {
    
  });
}
  downloadAPK(): any {
      // const link = document.createElement('a');
      // link.setAttribute('target', '_blank');
      // link.setAttribute('href', 'https://m.apkpure.com/sample-android-app-test/com.sabithpkcmnr.admobintegration/download?from=details');
      // link.setAttribute('download','apk');
      // document.body.appendChild(link);
      // link.click();
      // link.remove();
      // const blob = new Blob(['https://m.apkpure.com/sample-android-app-test/com.sabithpkcmnr.admobintegration/download?from=details'], { type: "application/apk" });
      // const url= window.URL.createObjectURL(blob);
      // window.open(url);
		//return this.http.get('https://uattele.cloudvoice.in/documents/prescription/2021020203025065.pdf', {responseType: 'blob'});
  }
  getLink(){
    return `${environment["baseUrl"]}` + 'documents/apk/telemed.apk';
  }
  getHealthidSelf(){
    return '/#/HealthidIndex';
  }
  getHealthidAssisted(){
    return '/#/AssistedHealthidCreationMobile';
  } 
}